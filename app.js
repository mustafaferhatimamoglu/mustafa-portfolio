// === Tema ===
const root = document.documentElement;
const themeToggle = document.getElementById('themeToggle');
const saved = localStorage.getItem('theme') || 'dark';
if(saved === 'light') root.classList.add('light');
themeToggle.textContent = root.classList.contains('light') ? 'üåô' : '‚òÄÔ∏è';
themeToggle.addEventListener('click', () => {
  root.classList.toggle('light');
  localStorage.setItem('theme', root.classList.contains('light') ? 'light' : 'dark');
  themeToggle.textContent = root.classList.contains('light') ? 'üåô' : '‚òÄÔ∏è';
});
document.getElementById('year').textContent = new Date().getFullYear();

// === Hakkƒ±mda kƒ±sa metin (gerekirse g√ºncelle) ===
// ƒ∞√ßerik CV'den derlendi.


// === Yetenekler ===
const skills = [
  {name:'C# / .NET', level:95},
  {name:'MSSQL', level:90},
  {name:'DevExpress', level:85},
  {name:'Entity Framework', level:85},
  {name:'ASP.NET', level:80},
  {name:'JavaScript', level:75},
  {name:'Python / OpenCV', level:70},
  {name:'IoT / ESP32 / C/C++', level:85},
  {name:'G√∂r√ºnt√º ƒ∞≈üleme / AI', level:75},
  {name:'ERP / B2B2C Entegrasyon', level:85},
  {name:'Linux & AD & Sanalla≈ütƒ±rma', level:70},
  {name:'Test & Doƒürulama Otomasyonu', level:80},
];
const skillsGrid = document.getElementById('skillsGrid');
skills.forEach(s=>{
  const el = document.createElement('div');
  el.className = 'skill';
  el.innerHTML = `<h4>${s.name}</h4>
    <div class="meter"><i style="width:${s.level}%"></i></div>`;
  skillsGrid.appendChild(el);
});

// === Deneyim === (CV kaynaklƒ±)
const experience = [
  {
    title: 'Bilgi ƒ∞≈ülem Uzmanƒ±',
    company: '≈ûirik√ßioƒülu Tekstil',
    time: 'Mar 2025 ‚Äî Devam',
    location: 'Kayseri',
    bullets: [
      'Sunucu, network, g√ºvenlik (firewall) kurulumu ve y√∂netimi',
      'C# WinForms + MSSQL ile i√ß yazƒ±lƒ±mlar (arƒ±za takibi, fazla mesai, sendika)',
      'Active Directory, sanalla≈ütƒ±rma, yedekleme s√ºre√ßleri',
      'IP CCTV sistem entegrasyonu; √ºretim kalite i√ßin g√∂r√ºnt√º i≈üleme',
    ]
  },
  {
    title:'Sistem M√ºhendisi',
    company:'Ayruz End√ºstri',
    time:'≈ûub 2023 ‚Äî Ara 2024',
    location:'Kayseri',
    bullets:[
      'Havacƒ±lƒ±k projelerinde tasarƒ±m, entegrasyon ve doƒürulama',
      'DO-178/DO-254, MIL-STD-810G/DO-160 test planlama ve uygulama',
      'Helikopter vin√ß yazƒ±lƒ±mƒ±, yakƒ±t probu, test ekipmanlarƒ±',
    ]
  },
  {
    title:'Sistem M√ºhendisi',
    company:'Zirve Bili≈üim',
    time:'Haz 2021 ‚Äî ≈ûub 2023',
    location:'Kayseri',
    bullets:[
      'BT altyapƒ±sƒ±: g√ºvenlik duvarƒ±, sanalla≈ütƒ±rma, NAS/yedekleme',
      'Logo uyumlu entegrasyonlar, aƒü trafiƒüi optimizasyonu',
      'Kamera/g√ºvenlik sistemleri ve kullanƒ±cƒ± destek s√ºre√ßleri',
    ]
  },
  {
    title:'Yazƒ±lƒ±m M√ºhendisi',
    company:'Seda≈ü Bilgisayar',
    time:'Ara 2019 ‚Äî Haz 2021',
    location:'',
    bullets:[
      'Netsis/Logo B2B2C-ERP entegrasyonlarƒ±',
      'TURPAK entegre istasyon y√∂netimi; el terminali ekranlarƒ±',
      'Bulut yedekleme ve √∂zel raporlama yazƒ±lƒ±mlarƒ±',
    ]
  }
];
const experienceList = document.getElementById('experienceList');
experience.forEach(j=>{
  const el = document.createElement('div');
  el.className = 'job';
  el.innerHTML = `
    <h4>${j.title} ‚Äî ${j.company}</h4>
    <div class="meta">${j.time}${j.location ? ' ‚Ä¢ ' + j.location : ''}</div>
    <ul>${j.bullets.map(b=>`<li>${b}</li>`).join('')}</ul>`;
  experienceList.appendChild(el);
});

// === Projeler ===
const projects = [
  {
    title:'Ara√ßta Sarsƒ±ntƒ± Algƒ±layan ESP32-CAM',
    desc:'G-sens√∂r tetikli fotoƒüraf: altƒ±na tarih/saat + ivme yazƒ±sƒ± basƒ±p Telegram‚Äôa g√∂nderir.',
    tags:['ESP32','IoT','G√∂r√ºnt√º ƒ∞≈üleme'],
    type:'iot',
    links:[
      {label:'Kod (Arduino ske√ß)', url:'#'},
      {label:'Teknik Notlar', url:'#'}
    ]
  },
  {
    title:'Yapay Zeka Destekli G√∂r√ºnt√º ƒ∞≈üleme Sistemleri',
    desc:'Yangƒ±n algƒ±lama, ara√ß eri≈üim, otopark y√∂netimi ‚Äî Python/OpenCV/TensorFlow + ESP32 entegrasyonu.',
    tags:['Python','OpenCV','TensorFlow','AI'],
    type:'ai',
    links:[]
  },
  {
    title:'Otomatik √áevresel Test Sistemi',
    desc:'DO-160 & MIL-STD-810 uyumlu test senaryolarƒ±nƒ± C#/.NET ile otomatikle≈ütirme, veri toplama ve raporlama.',
    tags:['C#','.NET','Otomasyon'],
    type:'automation',
    links:[]
  },
  {
    title:'Kaan/H√ºrjet Yakƒ±t Probu',
    desc:'Donanƒ±m + g√∂m√ºl√º yazƒ±lƒ±m + entegrasyon ve test a≈üamalarƒ±.',
    tags:['G√∂m√ºl√º','C','C#'],
    type:'iot',
    links:[]
  },
  {
    title:'B2B Sipari≈ü & Fatura Y√∂netimi',
    desc:'Logo ERP ile tam entegre B2B: sipari≈ü, irsaliye, fatura; web aray√ºz ve servisler.',
    tags:['ASP.NET','MSSQL','Entegrasyon'],
    type:'software',
    links:[]
  },
  {
    title:'Akƒ±llƒ± ≈ûehir Aydƒ±nlatma (ESP32 Mesh)',
    desc:'Mesh yapƒ±, √∂l√ßeklenebilir topoloji, MQTT ile ger√ßek zamanlƒ± izleme.',
    tags:['ESP32','MQTT','IoT'],
    type:'iot',
    links:[]
  },
];

const projectsGrid = document.getElementById('projectsGrid');
function renderProjects(filter='all'){
  projectsGrid.innerHTML = '';
  projects
    .filter(p => filter==='all' ? true : p.type===filter)
    .forEach(p=>{
      const card = document.createElement('div');
      card.className = 'card';
      card.innerHTML = `
        <div class="title">${p.title}</div>
        <div class="desc">${p.desc}</div>
        <div class="badges">${p.tags.map(t=>`<span class="badge">${t}</span>`).join('')}</div>
        <div class="links">
          ${p.links.map(l=>`<a class="btn" target="_blank" rel="noopener" href="${l.url}">${l.label}</a>`).join('')}
        </div>`;
      projectsGrid.appendChild(card);
    });
}
renderProjects();

// Filtreler
document.querySelectorAll('.chip').forEach(chip=>{
  chip.addEventListener('click', ()=>{
    document.querySelectorAll('.chip').forEach(c=>c.classList.remove('is-active'));
    chip.classList.add('is-active');
    renderProjects(chip.dataset.filter);
  });
});

// === CV indirme (yerine kendi PDF'ini koy) ===
const cvUrl = 'KariyerCV-A1FEDD2D-C64E-4094-BF9F-E0F35828EA4D.pdf'; // repo k√∂k√ºne ekle
const downloadBtn = document.getElementById('downloadCV');
downloadBtn.setAttribute('href', cvUrl);
